openapi: 3.0.1
info:
  title: Cinema API
  description: STD21010
  version: 1.0.0
servers:
  - url: https://STD21010.com
tags:
  - name: Rooms
  - name: Films
  - name: Projections
paths:
  /rooms:
    get:
      tags:
        - "Rooms"
      summary: Get all Rooms
      operationId: getRooms
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
        400:
          description: Error
          content: {}
  /rooms/{id}:
    get:
      tags:
        - "Rooms"
      summary: get the room by specified id
      operationId: getRoom
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
  /Films:
    get:
      tags:
        - "Films"
      summary: Get all Films
      operationId: getFilms
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    put:
      tags:
        - "Films"
      summary: modifies entirely a Film list
      requestBody:
        description: new Film
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/NewFilm"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}

  /Films/{id}:
    get:
      tags:
        - "Films"
      summary: get the Film by specified id
      operationId: getFilm
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    put:
      tags:
        - "Films"
      summary: allows you to modify Film data
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: new Film
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewFilm"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    delete:
      tags:
        - "Films"
      summary: delete a Film by referring it to id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns the id of the deleted film"

        400:
          description: Error
          content: {}
  /Films/category:
    get:
      tags:
        - Films
      summary: Select Films by category
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
          examples:
            changeMovie:
              summary: Change categories
              value:
                Moviecategorie: action
      responses:
        200:
          description: List of Films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Film"
        400:
          description: Bad request
          content: {}

  /projections:
    get:
      tags:
        - "Projections"
      summary: Get all projections
      operationId: get Projections
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    put:
      tags:
        - "Projections"
      summary: modifies Projection list
      requestBody:
        description: new Film
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                allOf:
                  - $ref: "#/components/schemas/NewProjection"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    post:
      tags:
        - "Projections"
      summary: create a new Projection
      requestBody:
        required: true
        description: new Film
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProjection"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    patch:
      tags:
        - "Projections"
      summary: patch
      description: |
        Possible changes on:
        * Film: change film
        * room: change room
        * hour: change hour
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Projection"
            examples:
              changeFilm:
                summary: Change Films
                value:
                  - id: 1
                    FilmId: 1
                  - id: 2
                    FilmId: 2
              changeRoom:
                summary: Change room
                value:
                  - id: 1
                    roomId: A
                  - id: 2
                    roomId: B
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Projection"
  /projections/{id}:
    get:
      tags:
        - "Projections"
      summary: get the projection by specified id
      operationId: getProjection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    put:
      tags:
        - "Projections"
      summary: modify projection data
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        description: new projection
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              allOf:
                - $ref: "#/components/schemas/NewProjection"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    delete:
      tags:
        - "Projections"
      summary: deletes a projection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Return id when projection deleted"

        400:
          description: Error
          content: {}
  /projections/category:
    get:
      tags:
        - Projections
      summary: Select Films diffusion by category
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of Films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Categories"
        400:
          description: Bad request
          content: {}
  /Projections/WeekDate:
    get:
      tags:
        - Projections
      summary: Lists of projections in a week
      operationId: calendar
      parameters:
        - name: WeekDate
          in: query
          required: true
          schema:
            type: string
          examples:
            changeMovie:
              summary: WeekDate
              value:
                Date: "2022-08-01"
      responses:
        200:
          description: List of Films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeekProjections"
        400:
          description: Bad request
          content: {}
          
components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          example: "A"
        capacity:
          type: number
          example: 6

    NewFilm:
      type: object
      properties:
        title:
          type: string
          example: "Pirates des caraibes"
        duration:
          type: string
          example: 2h 30
        summary:
          type: string
          example: Captain jack sparrow
        director:
          type: string
          example: Netflix
        date:
          type: string
          format: date
    Film:
      type: object
      properties:
        id:
          type: number
      allOf:
        - $ref: "#/components/schemas/NewFilm"
    NewProjection:
      type: object
      properties:
        MovieId:
          type: integer
          example: 1
        roomId:
          type: string
          default: A
          enum:
            - A
            - B
        diffusion:
          type: string
          example: "2022-08-01 18:00"
    Projection:
      type: object
      properties:
        id:
          type: number
          example: "1"
        diffusion:
          type: string
          example: "2022-08-01 18:00"
        Movie:
          $ref: "#/components/schemas/Film"
        room:
          $ref: "#/components/schemas/Room"
    WeekProjections:
      oneOf: 
        -  $ref: "#/components/schemas/Projection"
        -  $ref: "#/components/schemas/Projection"
        -  $ref: "#/components/schemas/Projection"
    NewCategories:
      type: object
      properties:
        type:
          type: string
          example: action
    Categories:
      allOf:
        - $ref: "#/components/schemas/NewCategories"
      type: object
      properties:
        id:
          type: integer
