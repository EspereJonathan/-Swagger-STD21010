openapi: 3.0.1
info:
  title: STD21010
  description: Global description
  version: 1.0.0
servers:
- url: https://STD21010.com
tags :
  - name : Students
  - name : Courses
paths:
  /students :
    get:
      tags:
      - Students
      summary: Get all students
      description: Get all students with details
      operationId: find student ById
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
          
    post:
      tags:
      - Students
      summary: Create new  students
      description: create new student from a array
      operationId: add student
      requestBody:
        description: Students to be created
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
     
    put:
      tags:
      - Students
      summary: Update existing student
      description: Update student
      operationId: put student
      requestBody:
        description: Students to be created
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: student updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
    patch:
      tags:
      - Students
      summary: Update existing student
      description: Update student
      operationId: patch student
      requestBody:
        description: Students to be updated
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: student updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
          
  /students/{id}:
    get:
      tags:
      - Students
      summary: Get student by identifier
      operationId: get student ById
      parameters:
      - name: id
        in: path
        required: true
        explode : true
        schema:
          type: string
      responses:
        200:
          description: student updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
    delete:
      tags:
      - Students
      summary: Delete student by id
      operationId: delete student ById
      parameters:
      - name: id
        in: path
        required: true
        explode : true
        schema:
          type: string
      responses:
        200:
          description: delete
          content: {}
        400:
          description: Bad Request
          content: {}
  /courses :
    get:
      tags:
      - Courses
      summary: Get all courses
      description: Get all courses with details
      operationId: find all courses
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content: {}
          
    post:
      tags:
      - Courses
      summary: Create new courses
      description: create new courses from a array
      operationId: add course
      requestBody:
        description: Courses to be created
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/CreateCourse'
        required: true
      responses:
        200:
          description: List of Courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content: {}
     
    put:
      tags:
      - Courses
      summary: Update existing courses
      description: update courses
      operationId: putCourse
      requestBody:
        description: Courses to be updated
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/Course'
        required: true
      responses:
        200:
          description: courses updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content: {}
    patch:
      tags:
      - Courses
      summary: Update existing courses
      description: update information about course
      operationId: patchCourse
      requestBody:
        description: Courses to be updated
        content:
          application/json:
            schema:
              type : array
              items :
                $ref: '#/components/schemas/Course'
        required: true
      responses:
        200:
          description: Course updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content: {}
          
  /courses/{id}:
    get:
      tags:
      - Courses
      summary: Get course by id
      operationId: get course ById
      parameters:
      - name: id
        in: path
        required: true
        explode : true
        schema:
          type: string
      responses:
        200:
          description: course with details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content: {}
    delete:
      tags:
      - Courses
      summary: Delete course by id
      operationId: delete course ById
      parameters:
      - name: id
        in: path
        required: true
        explode : true
        schema:
          type: string
      responses:
        200:
          description: delete
          content: {}
        400:
          description: Bad Request
          content: {}
components:
  schemas:
    CreateStudent:
      allOf:
        - $ref: '#/components/schemas/PhoneNumber'
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Jonathan"
        birth_date:
          type: string
          format: date
          example: "2001-08-05"
        adress: 
          type: string
          example: "Ivandry"

    PhoneNumber:
      type: object
      properties:
        country-code:
          type: string
          example: "101"
        number:
          type: string
          example: "0341872429"      
        
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
      allOf:
          - $ref : '#/components/schemas/CreateStudent'
        
      xml:
        name: Student
    CreateCourse:
      type: object
      properties:
        code:
          type: string
          example: PROG1
        name:
          type: string
          example: Algorithmique
        teacher:
          type: string
          example: Tokimahery RAMAROZAKA
        createdDate:
          type: string
          format: date
          example: "20-07-2022"
          
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
      allOf:
          - $ref : '#/components/schemas/CreateCourse' 
 
